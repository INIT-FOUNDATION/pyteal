#pragma version 6
byte "hello there"
store 0
int 747
byte "goodbye"
stores                  // yep. 747: "goodbye"
int 1000000
store 1
int 777
int 1000000000
stores                  // yep. 777: 1_000_000_000
int 1337
byte "fast_fibonacci_mixed"
stores                  // yep. 1337: "fast_fibonacci_mixed"
int 1337
loads
byte "logcat"
==
bnz main_l10
byte "logcat"
byte "_"
concat
byte "dynamic"
concat
int 1337
loads
==
bnz main_l9
int 1337
loads
byte "slow_fibonacci"
==
bnz main_l8
int 1337
loads
byte "fast_fibonacci"
==
bnz main_l7
int 1337
loads
byte "fast_fibonacci_mixed"
==
bnz main_l6
err
main_l6:
int 417
callsub fastfibonaccimixed_4
pop
load 1
callsub fastfibonaccimixed_4
pop
int 777
loads
callsub fastfibonaccimixed_4
b main_l11
main_l7:
int 317
callsub fastfibonacci_3
pop
load 1
callsub fastfibonacci_3
pop
int 777
loads
callsub fastfibonacci_3
b main_l11
main_l8:
int 217
callsub slowfibonacci_2
pop
load 1
callsub slowfibonacci_2
pop
int 777
loads
callsub slowfibonacci_2
b main_l11
main_l9:
byte "yo"
int 117
callsub logcatdynamic_1
pop
load 0
load 1
callsub logcatdynamic_1
pop
int 747
loads
int 777
loads
callsub logcatdynamic_1
pop
int 101
b main_l11
main_l10:
load 0
int 17
callsub logcat_0
pop
int 100
main_l11:
return

// logcat
logcat_0:
store 3
store 2
load 2
load 3
itob
concat
store 4
load 4
log
load 4
retsub

// logcat_dynamic
logcatdynamic_1:
store 6
store 5
int 42
load 5
load 6
itob
concat
stores
int 42
loads
log
int 42
loads
retsub

// slow_fibonacci
slowfibonacci_2:
store 7
load 7
int 1                       >>> n,1
<=
bnz slowfibonacci_2_l2
load 7
int 2
-
load 7
swap
callsub slowfibonacci_2
swap
store 7
load 7
int 1
-
load 7
swap
callsub slowfibonacci_2
swap
store 7
+
b slowfibonacci_2_l3
slowfibonacci_2_l2:
load 7
slowfibonacci_2_l3:
retsub

// fast_fibonacci
fastfibonacci_3:
store 8
int 0
store 10
int 1
store 11
int 1
store 9
fastfibonacci_3_l1:
load 9                  
load 8                  >>> 1,n
<=
bz fastfibonacci_3_l3
load 10
load 11
+
store 11
load 11
load 10
-
store 10
load 9
int 1
+
store 9
b fastfibonacci_3_l1
fastfibonacci_3_l3:
load 10
retsub

// fast_fibonacci_mixed
fastfibonaccimixed_4:
store 12
int 42
int 1337                // yep too large. 42*1337: 0
*
int 0
stores
int 1
store 13
int 42
int 1
stores
fastfibonaccimixed_4_l1:
int 42
loads
load 12
<=
bz fastfibonaccimixed_4_l3
int 42
int 1337
*
loads
load 13
+
store 13
int 42
int 1337
*
load 13
int 42
int 1337
*
loads
-
stores
int 42
int 42
loads
int 1
+
stores
b fastfibonaccimixed_4_l1
fastfibonaccimixed_4_l3:
int 42
int 1337
*
loads
retsub