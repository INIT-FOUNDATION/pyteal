name: "On Commit Workflow"
on:
  schedule:
    - cron: "22 * * * *"
  pull_request:
  push:
    tags:
      - v**
    branches:
      - master

jobs:
  hello:
    runs-on: ubuntu-20.04
    steps:
      - run: echo "hello there"
      - run: echo "goodbye"
  # check-date:
  #   runs-on: ubuntu-20.04
  #   name: Check latest commit
  #   outputs:
  #     was_edited: ${{ steps.was_edited.outputs.was_edited }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Check latest commit
  #       run: echo ${{ github.sha }}
  #     - name: Check if commit is less than a day old
  #       id: was_edited
  #       run: |
  #         if [[ -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) ]]; then
  #           echo "::set-output name=was_edited::true"
  #         else
  #           echo "::set-output name=was_edited::false"
  #         fi

  # build-test:
  #   needs: [check-date]
  #   runs-on: ubuntu-20.04
  #   container: python:${{ matrix.python }}
  #   strategy:
  #     matrix:
  #       python: ["3.10", "3.11"]
  #   if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' || needs.check_date.outputs.was_edited == 'true' }}
  #   steps:
  #     - run: python3 --version
  #     - name: Check out code
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: Install python dependencies
  #       run: make setup-development
  #     - name: Build and Test
  #       run: make lint-and-test
    

  # run-integration-tests:
  #   runs-on: ubuntu-20.04
  #   strategy:
  #     matrix:
  #       python: ["3.10", "3.11"]
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-python@v3
  #       with:
  #         python-version: "${{ matrix.python }}"
  #     - name: Test Python version
  #       run: |
  #         installed="$(python --version)"
  #         expected="${{ matrix.python }}"
  #         echo $installed
  #         [[ $installed =~ "Python ${expected}" ]] && echo "Configured Python" || (echo "Failed to configure Python" && exit 1)
  #     - name: Start algod
  #       run: make algod-start
  #     - name: Install python dependencies
  #       run: make setup-development
  #     - name: Integration Tests Only
  #       run: make test-integration
  #     - name: Stop algod
  #       run: make algod-stop

  # build-docset:
  #   runs-on: ubuntu-20.04
  #   strategy:
  #     matrix:
  #       python: [ "3.10" ]
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-python@v3
  #       with:
  #         python-version: "${{ matrix.python }}"
  #     - name: Install python dependencies
  #       run: make setup-docs
  #     - name: Make docs
  #       run: make bundle-docs
  #     - name: Archive docset
  #       if: ${{ !env.ACT }}
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: pyteal.docset
  #         path: docs/pyteal.docset.tar.gz

  # upload-to-pypi:
  #   runs-on: ubuntu-20.04
  #   container: python:3.10
  #   needs: ['build-test', 'run-integration-tests', 'build-docset']
  #   if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags') }}
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: Install dependencies
  #       run: make setup-wheel
  #     - name: Build package
  #       run: make bdist-wheel
  #     - name: Release
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         user: __token__
  #         password: ${{ secrets.PYPI_API_TOKEN }}
