name: "Build workflow"
on:
  pull_request:
  push:
    tags:
      - v**
    branches:
      - master

jobs:
  build-test:
    runs-on: ubuntu-20.04
    container: python:${{ matrix.python }}
    strategy:
      matrix:
        python: ["3.10", "3.11"]
    steps:
      - run: python3 --version
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install Python dependencies, Build, and Test
        run: make setup-build-test

  run-integration-tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python: ["3.10", "3.11"]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python }}"
      - name: Test Python version
        run: |
          installed="$(python --version)"
          expected="${{ matrix.python }}"
          echo $installed
          [[ $installed =~ "Python ${expected}" ]] && echo "Configured Python" || (echo "Failed to configure Python" && exit 1)
      - name: Integration tests using algod
        run: make algod-integration

  build-docset:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python: [ "3.10" ]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python }}"
      - name: Install python dependencies
        run: make setup-docs
      - name: Make docs
        run: make bundle-docs
      - name: Archive docset
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v2
        with:
          name: pyteal.docset
          path: docs/pyteal.docset.tar.gz

  upload-to-pypi:
    runs-on: ubuntu-20.04
    container: python:3.10
    needs: ['build-test', 'run-integration-tests', 'build-docset']
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags') }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: make setup-wheel
      - name: Build package
        run: make bdist-wheel
      - name: Release
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  x-build-test:
    name: build-test if changes in the previous 24 hours
    runs-on: ubuntu-20.04
    container: python:${{ matrix.python }}
    strategy:
      matrix:
        python: ["3.10", "3.11"]
    steps:
      - run: python3 --version
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Check for code changes
        id: check
        run: |
          git config --global --add safe.directory /__w/pyteal/pyteal
          if [ -n "$(git log --since='24 hours ago')" ]; then
            echo "should_run=true" >> $GITHUB_ENV
          else
            echo "should_run=false" >> $GITHUB_ENV
          fi
      - name: Install Python dependencies, Build, and Test
        if: ${{ env.should_run == 'true' }}
        run: make setup-build-test

  x-run-integration-tests:
    name: run-integration-tests if changes in the previous 24 hours
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python: ["3.10", "3.11"]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Check for code changes
        id: check
        run: |
          git config --global --add safe.directory /__w/pyteal/pyteal
          if [ -n "$(git log --since='24 hours ago')" ]; then
            echo "should_run=true" >> $GITHUB_ENV
          else
            echo "should_run=false" >> $GITHUB_ENV
          fi
      - uses: actions/setup-python@v4
        if: ${{ env.should_run == 'true' }}
        with:
          python-version: "${{ matrix.python }}"
      - name: Test Python version
        if: ${{ env.should_run == 'true' }}
        run: |
          installed="$(python --version)"
          expected="${{ matrix.python }}"
          echo $installed
          [[ $installed =~ "Python ${expected}" ]] && echo "Configured Python" || (echo "Failed to configure Python" && exit 1)
      - name: Integration tests using algod
        if: ${{ env.should_run == 'true' }}
        run: make algod-integration

  x-from-template:
    name: Try to run a sub-job from a template
    uses: algorand/pyteal/.github/workflows/templates/units.yml@experiment-nightly-3
