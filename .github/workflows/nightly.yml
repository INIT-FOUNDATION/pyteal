name: "Nightly Build"
on:
  schedule:
    - cron: "10 * * * *"

jobs:
  check-date:
    runs-on: ubuntu-20.04
    name: Check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v2

      - name: Current Boston time
        run: TZ='America/New_York' && export TZ && date +"%A, %B %d, %Y %I:%M:%S %p %Z"

      - name: print latest_commit
        run: echo ${{ github.sha }}

      - id: should_run
        continue-on-error: true
        name: check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: test -z "$(git rev-list  --after='24 hours'  ${{ github.sha }})" && echo "::set-output name=should_run::false"

  build-test:
    needs: [check-date]
    if: ${{ github.event_name == 'release' || needs.check_date.outputs.should_run == 'true' }}

    runs-on: ubuntu-20.04
    container: python:${{ matrix.python }}
    strategy:
      matrix:
        python: ["3.10", "3.11"]
    steps:
      - run: python3 --version
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install Python dependencies, Build, and Test
        run: make setup-build-test

  run-integration-tests:
    needs: [check-date]
    if: ${{ github.event_name == 'release' || needs.check_date.outputs.should_run == 'true' }}

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python: ["3.10", "3.11"]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v3
        with:
          python-version: "${{ matrix.python }}"
      - name: Test Python version
        run: |
          installed="$(python --version)"
          expected="${{ matrix.python }}"
          echo $installed
          [[ $installed =~ "Python ${expected}" ]] && echo "Configured Python" || (echo "Failed to configure Python" && exit 1)
      - name: Integration tests using algod
        run: make algod-integration

  nighly-slow:
    needs: [check-date]
    if: ${{ github.event_name == 'release' || needs.check_date.outputs.should_run == 'true' }}

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python: ["3.10", "3.11"]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v3
        with:
          python-version: "${{ matrix.python }}"
      - name: Insert slow tests here
        run: make nighly-slow
